import{f as u,r as o,o as e,c,a as l,d as r,F as i,b as s}from"./app.ab9e2f57.js";const k=s(`<h1 id="loginreg\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#loginreg\u7EC4\u4EF6" aria-hidden="true">#</a> LoginReg\u7EC4\u4EF6</h1><p>\u5B83\u7684\u53C2\u6570\u5982\u4E0B</p><ul><li>onLogin: \u767B\u5F55\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6\uFF0C</li><li>onReg: \u6CE8\u518C\u65F6\u89E6\u53D1\u7684\u4E8B\u4EF6\uFF0C</li><li>onLoginSuc\uFF1A\u767B\u5F55\u6210\u529F\u65F6\u7684\u56DE\u8C03\uFF0C</li><li>onRegSuc\uFF1A\u6CE8\u518C\u65F6\u6210\u529F\u65F6\u7684\u56DE\u8C03\uFF0C</li><li>onLoginFail\uFF1A\u767B\u5F55\u5931\u8D25\u65F6\u7684\u56DE\u8C03\uFF0C</li><li>onRegFail\uFF1A\u6CE8\u518C\u5931\u8D25\u65F6\u7684\u56DE\u8C03\uFF0C</li><li>LoginTitle\uFF1A\u767B\u5F55\u6846\u7684\u6807\u9898\uFF0C</li><li>LoginSubmitTip: \u767B\u5F55\u6309\u94AE\u4E0A\u7684\u63D0\u793A,</li><li>RegTitle: \u6CE8\u518C\u6846\u7684\u6807\u9898,</li><li>RegSubmitTip: \u6CE8\u518C\u6309\u94AE\u4E0A\u7684\u63D0\u793A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">SceneLoginRegProps</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">onLogin</span><span class="token operator">:</span><span class="token punctuation">(</span> p<span class="token operator">:</span> <span class="token punctuation">{</span> userID<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> pwd<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span> <span class="token punctuation">{</span> done<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span> <span class="token operator">&gt;</span>
    <span class="token function-variable function">onReg</span><span class="token operator">:</span> <span class="token punctuation">(</span> p<span class="token operator">:</span> <span class="token punctuation">{</span> userID<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> userNick<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> pwd<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span> <span class="token punctuation">{</span> done<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span> <span class="token operator">&gt;</span>
    onLoginSuc <span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span> userID<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    onRegSuc <span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span> userID<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    onLoginFail <span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span> userID<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>
    onRegFail <span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span> userID<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>

    LoginTitle <span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    LoginSubmitTip <span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    
    RegTitle <span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    RegSubmitTip <span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4F8B\u5B50\uFF1A</p>`,5),d=s(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>ts<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">{</span> SLoginReg <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;scene-ui&#39;</span><span class="token punctuation">;</span>
    <span class="token comment">// ( p ) =&gt; Promise&lt; { done: boolean } &gt;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">onLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span> 
        <span class="token parameter"><span class="token literal-property property">p</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
            <span class="token literal-property property">userID</span><span class="token operator">:</span> string<span class="token punctuation">,</span> 
            <span class="token literal-property property">pwd</span><span class="token operator">:</span> string 
        <span class="token punctuation">}</span></span>
    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fetch</span><span class="token punctuation">(</span> 
        <span class="token string">&#39;http://localhost:9000/api/login&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span> <span class="token comment">// \u6307\u5B9A\u63D0\u4EA4\u65B9\u5F0F\u4E3A\u8868\u5355\u63D0\u4EA4</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;userID&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>userID<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;pwd&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>pwd<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> <span class="token function-variable function">onReg</span> <span class="token operator">=</span> <span class="token punctuation">(</span> 
        <span class="token parameter"><span class="token literal-property property">p</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
            <span class="token literal-property property">userID</span><span class="token operator">:</span> string<span class="token punctuation">,</span> 
            <span class="token literal-property property">pwd</span><span class="token operator">:</span> string<span class="token punctuation">,</span> 
            <span class="token literal-property property">userNick</span><span class="token operator">:</span> string 
        <span class="token punctuation">}</span></span> 
    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fetch</span><span class="token punctuation">(</span> 
            <span class="token string">&#39;http://localhost:9000/api/reg&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
                <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span> <span class="token comment">// \u6307\u5B9A\u63D0\u4EA4\u65B9\u5F0F\u4E3A\u8868\u5355\u63D0\u4EA4</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;userID&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>userID<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">&quot;pwd&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>pwd<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;userNick&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>userNick<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-login-reg</span> 
    <span class="token attr-name">:onLogin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onLogin<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:onReg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onReg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-login-reg</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h2 id="loginreg\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#loginreg\u5C5E\u6027" aria-hidden="true">#</a> LoginReg\u5C5E\u6027</h2><table><thead><tr><th>\u5C5E\u6027</th><th>\u8BF4\u660E</th><th>\u7C7B\u578B</th><th>\u53EF\u9009\u503C</th><th>\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td>onLogin</td><td>\u767B\u5F55\u65F6\u89E6\u53D1\u7684\u51FD\u6570</td><td>( p: { userID: string, pwd: string } ) =&gt; Promise&lt; { done: boolean } &gt;</td><td>-</td><td>-</td></tr><tr><td>onReg</td><td>\u6CE8\u518C\u65F6\u89E6\u53D1\u7684\u51FD\u6570</td><td>( p: { userID: string, userNick: any, pwd: string } ) =&gt; Promise&lt; { done: boolean } &gt;</td><td>-</td><td>-</td></tr><tr><td>onLoginSuc</td><td>\u767B\u5F55\u6210\u529F\u65F6\u89E6\u53D1\u7684\u51FD\u6570 userID\u4F1A\u88AB\u4F5C\u4E3A\u56DE\u8C03\u7684\u53C2\u6570</td><td>( userID: string ) =&gt; any</td><td>\u4E0D\u7BA1\u662F\u5426\u4F20\u5165\u8BE5\u503C \u90FD\u4F1A\u89E6\u53D1\u4E00\u4E2A\u5168\u5C40\u7684&lt;\u6210\u529F\u63D0\u793A&gt;\u6D88\u606F</td><td>-</td></tr><tr><td>onRegSuc</td><td>\u6CE8\u518C\u6210\u529F\u65F6\u89E6\u53D1\u7684\u51FD\u6570 userID\u4F1A\u88AB\u4F5C\u4E3A\u56DE\u8C03\u7684\u53C2\u6570</td><td>( userID: string ) =&gt; any</td><td>\u4E0D\u7BA1\u662F\u5426\u4F20\u5165\u8BE5\u503C \u90FD\u4F1A\u89E6\u53D1\u4E00\u4E2A\u5168\u5C40\u7684&lt;\u6210\u529F\u63D0\u793A&gt;\u6D88\u606F</td><td>-</td></tr><tr><td>onLoginFail</td><td>\u767B\u5F55\u5931\u8D25\u65F6\u89E6\u53D1\u7684\u51FD\u6570 userID\u4F1A\u88AB\u4F5C\u4E3A\u56DE\u8C03\u7684\u53C2\u6570</td><td>( userID: string ) =&gt; any</td><td>\u4E0D\u7BA1\u662F\u5426\u4F20\u5165\u8BE5\u503C \u90FD\u4F1A\u89E6\u53D1\u4E00\u4E2A\u5168\u5C40\u7684&lt;\u5931\u8D25\u63D0\u793A&gt;\u6D88\u606F</td><td>-</td></tr><tr><td>onRegFail</td><td>\u6CE8\u518C\u5931\u8D25\u65F6\u89E6\u53D1\u7684\u51FD\u6570 userID\u4F1A\u88AB\u4F5C\u4E3A\u56DE\u8C03\u7684\u53C2\u6570</td><td>( userID: string ) =&gt; any</td><td>\u4E0D\u7BA1\u662F\u5426\u4F20\u5165\u8BE5\u503C \u90FD\u4F1A\u89E6\u53D1\u4E00\u4E2A\u5168\u5C40\u7684&lt;\u5931\u8D25\u63D0\u793A&gt;\u6D88\u606F</td><td>-</td></tr><tr><td>onLoginFail</td><td>\u767B\u5F55\u5931\u8D25\u65F6\u89E6\u53D1\u7684\u51FD\u6570 userID\u4F1A\u88AB\u4F5C\u4E3A\u56DE\u8C03\u7684\u53C2\u6570</td><td>( userID: string ) =&gt; any</td><td>\u4E0D\u7BA1\u662F\u5426\u4F20\u5165\u8BE5\u503C \u90FD\u4F1A\u89E6\u53D1\u4E00\u4E2A\u5168\u5C40\u7684&lt;\u5931\u8D25\u63D0\u793A&gt;\u6D88\u606F</td><td>-</td></tr><tr><td>onRegFail</td><td>\u6CE8\u518C\u5931\u8D25\u65F6\u89E6\u53D1\u7684\u51FD\u6570 userID\u4F1A\u88AB\u4F5C\u4E3A\u56DE\u8C03\u7684\u53C2\u6570</td><td>( userID: string ) =&gt; any</td><td>\u4E0D\u7BA1\u662F\u5426\u4F20\u5165\u8BE5\u503C \u90FD\u4F1A\u89E6\u53D1\u4E00\u4E2A\u5168\u5C40\u7684&lt;\u5931\u8D25\u63D0\u793A&gt;\u6D88\u606F</td><td>-</td></tr><tr><td>LoginTitle</td><td>\u767B\u5F55\u7684\u6807\u9898</td><td>string</td><td>\u4E00\u4E2A\u63CF\u8FF0\u767B\u5F55\u76EE\u7684\u7684\u6807\u9898\u5B57\u7B26\u4E32</td><td>&quot;\u767B\u5F55&quot;</td></tr><tr><td>LoginSubmitTip</td><td>\u767B\u5F55\u6309\u94AE\u4E0A\u7684\u6587\u5B57</td><td>string</td><td>-</td><td>&quot;LOGIN&quot;</td></tr><tr><td>RegTitle</td><td>\u6CE8\u518C\u7684\u6807\u9898</td><td>string</td><td>\u4E00\u4E2A\u63CF\u8FF0\u6CE8\u518C\u76EE\u7684\u7684\u6807\u9898\u5B57\u7B26\u4E32</td><td>&quot;\u6CE8\u518C&quot;</td></tr><tr><td>RegSubmitTip</td><td>\u6CE8\u518C\u6309\u94AE\u4E0A\u7684\u6587\u5B57</td><td>string</td><td>-</td><td>&quot;\u70B9\u51FB\u6CE8\u518C&quot;</td></tr></tbody></table>`,3),m=u({setup(g){const a=()=>new Promise(n=>n({done:!0})),t=()=>new Promise(n=>n({done:!0}));return(n,b)=>{const p=o("s-login-reg");return e(),c(i,null,[k,l("div",null,[r(p,{onLogin:a,onReg:t})]),d],64)}}});export{m as default};
